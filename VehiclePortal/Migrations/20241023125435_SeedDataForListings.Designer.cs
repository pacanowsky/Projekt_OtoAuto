// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiclePortal.Data;

#nullable disable

namespace VehiclePortal.Migrations
{
    [DbContext(typeof(ClassifiedAdsDbContext))]
    [Migration("20241023125435_SeedDataForListings")]
    partial class SeedDataForListings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehiclePortal.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trucks"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Motorcycles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Parts"
                        });
                });

            modelBuilder.Entity("VehiclePortal.Models.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Listings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 10, 18, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2871),
                            Description = "Excellent condition, low mileage, great family car.",
                            ImageUrl = "/images/listings/toyota_camry.jpg",
                            IsActive = true,
                            IsFeatured = true,
                            IsSold = false,
                            PostedDate = new DateTime(2024, 10, 18, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2855),
                            Price = 15000m,
                            Title = "2015 Toyota Camry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 10, 20, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2874),
                            Description = "Powerful truck, perfect for work and leisure.",
                            ImageUrl = "/images/listings/ford_f150.jpg",
                            IsActive = true,
                            IsFeatured = true,
                            IsSold = false,
                            PostedDate = new DateTime(2024, 10, 20, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2873),
                            Price = 25000m,
                            Title = "2018 Ford F-150",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 10, 13, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2877),
                            Description = "Classic bike, in great shape, ready to ride.",
                            ImageUrl = "/images/listings/harley_davidson.jpg",
                            IsActive = false,
                            IsFeatured = false,
                            IsSold = true,
                            PostedDate = new DateTime(2024, 10, 13, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2876),
                            Price = 12000m,
                            Title = "Harley Davidson Motorcycle",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 10, 21, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2879),
                            Description = "Brand new spare tire for BMW X5.",
                            ImageUrl = "/images/listings/bmw_x5_tire.jpg",
                            IsActive = true,
                            IsFeatured = false,
                            IsSold = false,
                            PostedDate = new DateTime(2024, 10, 21, 17, 54, 34, 778, DateTimeKind.Local).AddTicks(2878),
                            Price = 300m,
                            Title = "BMW X5 Spare Tire",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("VehiclePortal.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("VehiclePortal.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("VehiclePortal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            PasswordHash = "hashed_password",
                            UserType = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "janesmith@example.com",
                            PasswordHash = "hashed_password",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("VehiclePortal.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehiclePortal.Models.Listing", b =>
                {
                    b.HasOne("VehiclePortal.Models.Category", "Category")
                        .WithMany("Listings")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehiclePortal.Models.User", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehiclePortal.Models.Part", b =>
                {
                    b.HasOne("VehiclePortal.Models.Listing", "Listing")
                        .WithOne("Part")
                        .HasForeignKey("VehiclePortal.Models.Part", "ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("VehiclePortal.Models.Transaction", b =>
                {
                    b.HasOne("VehiclePortal.Models.User", "Buyer")
                        .WithMany("Transactions")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VehiclePortal.Models.Listing", "Listing")
                        .WithOne("Transaction")
                        .HasForeignKey("VehiclePortal.Models.Transaction", "ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("VehiclePortal.Models.Vehicle", b =>
                {
                    b.HasOne("VehiclePortal.Models.Listing", "Listing")
                        .WithOne("Vehicle")
                        .HasForeignKey("VehiclePortal.Models.Vehicle", "ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("VehiclePortal.Models.Category", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("VehiclePortal.Models.Listing", b =>
                {
                    b.Navigation("Part")
                        .IsRequired();

                    b.Navigation("Transaction")
                        .IsRequired();

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("VehiclePortal.Models.User", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
